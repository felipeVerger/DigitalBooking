stages:
  - build
  - test
  - publish
  - deploy

build:
  stage: build
  image: node
  script: 
    - echo "Start building App"
    - cd front/reserva-hoteles/
    - npm install
    - CI=false npm run build
    - echo "Build successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
      - front/reserva-hoteles/build
      - front/reserva-hoteles/node_modules/

test:
  stage: test
  needs: [build]
  image: node
  script:
    - echo "Testing App"
    #- cd front/reserva-hoteles/
    #- npm install
    #- CI=true npm test --passWithNoTests
    - echo "Test successfully!"

variables:
  DOCKER_REGISTRY: 145504712931.dkr.ecr.us-west-2.amazonaws.com
  AWS_DEFAULT_REGION: us-west-2
  REPOSITORY_NAME: digitalbookingweb
publish:
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - cd front/
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker build -t $DOCKER_REGISTRY/$REPOSITORY_NAME:latest . 
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$REPOSITORY_NAME:latest

deploy:
  stage: deploy
  needs: [docker-build]
  image: kroniak/ssh-client
  #before_script:
    #- echo "deploying app"
  script:  
    - echo "deploying app"
    #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key.pem
    #- chmod 400 key.pem
    #- ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker pull registry.gitlab.com/alfredomartinezzz/budgefy"
    #- ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker stop budgefycontainer || true && docker rm budgefycontainer || true"
    #- ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker run -p 3001:80 -d --name budgefycontainer registry.gitlab.com/alfredomartinezzz/budgefy" 
